 r←Test_Load_010(stopFlag batchFlag);⎕TRAP;rc;msg;zipFilename;parms
 ;dir;src;reg1;reg2;body;cfg;zipfile;refs
⍝ Publish simple package to the second registry and then load it from there
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX TC.GetTatinRootSpace'#'
 #.⎕SHADOW'TEMP'
 dir←∆GetTempDir ⍬
 (src reg1 reg2)←(⊂dir,'/'),¨'src' 'reg1' 'reg2'
 F.MkDir src reg1 reg2

 TC.Reg.CreateRegistry reg1
 TC.MyUserSettings.AddRegistry'[Private]',reg1
 TC.Reg.CreateRegistry reg2
 TC.MyUserSettings.AddRegistry'[local2]',reg2

 body←':Namespace Test' '∇r←Hello' 'r←''Word''' '∇' ':EndNamespace'
 (⊂body)F.NPUT src,'/Test.apln'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'Test' '1.0.0'
 cfg.source←'Test.apln'
 cfg.os_win←1
 TC.WritePackageConfigFile src cfg
 parms←TC.CreateBuildParms src
 zipfile←TC.BuildPackage parms
 (rc msg zipFilename)←TC.PublishPackage zipfile'[local2]'
 Assert 200=rc

 body←':Namespace Constants' '∇r←PI' 'r←3.14' '∇' ':EndNamespace'
 (⊂body)F.NPUT src,'/Constants.apln'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'Constants' '1.0.0'
 cfg.source←'Constants.apln'
 cfg.os_win←1
 TC.WritePackageConfigFile src cfg
 parms←TC.CreateBuildParms src
 zipfile←TC.BuildPackage parms
 (rc msg zipFilename)←TC.PublishPackage zipfile'[local2]'
 Assert 200=rc

 refs←TC.LoadPackages('[local2]Example-Constants-1.0.0')'#.TEMP'

 →T.GoToTidyUp(,⊂'Example_Constants_1_0_0')≢' '~⍨¨↓#._tatin.⎕NL 9
 →T.GoToTidyUp 2≠≢F.ListDirs reg2

 r←T._OK

∆TidyUp:
 Assert 0=⊃F.RmDir dir
 Assert TC.MyUserSettings.RemoveRegistry'[Private]'
 Assert TC.MyUserSettings.RemoveRegistry'[local2]'
 #.⎕EX TC.GetTatinRootSpace'#'
⍝Done
