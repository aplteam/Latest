 {r}←{TS}CheckLogFile folder;filename;year;month
⍝ This function has two tasks:
⍝  * It accumulates all data for the current year (except the current month) in case the month changed since the last call
⍝  * It splits the log file between this year and earlier in case the year changed since the last call.
⍝ `TS` is usefull for test cases but defaults to ⎕TS.
 r←0
 TS←{0<⎕NC ⍵:⍎⍵ ⋄ ⎕TS}'TS'
 filename←folder,'year'
 :If 0=≢year←##.A.ToNum ⎕TC~⍨∊⊃⎕NGET filename
     ⍝ This should not happen since it is initialized in `TatinAmendments`, but it DID happen anyway...
     (⊂⍕1⊃⎕TS)⎕NPUT filename 1
     year←##.A.ToNum ⎕TC~⍨∊⊃⎕NGET filename
 :EndIf
 filename←folder,'month'
 :If 0=≢month←##.A.ToNum ⎕TC~⍨∊⊃⎕NGET filename
     ⍝ This should not happen since it is initialized in `TatinAmendments`, but it DID happen anyway...
     (⊂¯2↑'00',⍕2⊃⎕TS)⎕NPUT filename 1
     month←##.A.ToNum ⎕TC~⍨∊⊃⎕NGET filename
 :EndIf
 :If r←month≠¯1+2⊃TS
 :OrIf 1=month
     :If 1≠2⊃TS
         ##.F.DeleteFile ##.F.ListFiles folder,'usage-data-',(⍕year),'-*.csv'
         ##.F.DeleteFile ##.F.ListFiles folder,'usage-data-',(⍕year),'-*.zip'
         TS AccumulateCurrentYear month folder
     :Else
         ##.F.DeleteFile ##.F.ListFiles folder,'usage-data-',(⍕year),'-*.csv'
         ##.F.DeleteFile ##.F.ListFiles folder,'usage-data-',(⍕year),'-*.zip'
     :EndIf
 :EndIf
 :If r←year≠⊃TS
     TS SplitLogFile year folder
 :EndIf
⍝Done
