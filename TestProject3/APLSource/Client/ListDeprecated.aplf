 list←{all}ListDeprecated uri;client;request;res;uri_;parms;registries;host;packageID;list
⍝ `uri` must a path to a Registry.
⍝ `r` is a matrix with one column: all deprecated packages on the given Registry (major version number only).\\
⍝ By specifying the optional `all` flag one can get a matrix with all versions of deprecated packages.\\
 all←{0<⎕NC ⍵:⍎⍵ ⋄ 0}'all'
 uri_←ReplaceRegistryAlias uri
 'No (valid) Registry specified?!'Assert 0<≢uri_
 '⍵ is not an HTTP request'Assert Reg.IsHTTP uri_
 (host packageID)←Reg.SeparateUriAndPackageID uri_
 'Not a valid URI'Assert('/'+.=host)∊2 3
 request←R.NewRequest 0
 request.RequestTarget←Reg.VersionOf_REST,'/deprecated-pkgs',all/'?all'
 request.Headers,←⊂'Accept' 'application/json'
 res←SendAndReceive host request
 :If 404≡res.StatusCode
     list←''
 :ElseIf 200≠res.StatusCode
     :If 0<≢res.Content
         ('Server: ',res.Content)Assert 0
     :Else
         ('Failed with status code ',⍕res.StatusCode)Assert 0
     :EndIf
 :Else
     :Trap 11
         list←⍪Reg.APLfromJSON res.Content
     :Else
         'Server failed to return (valid) JSON5'Assert 0
     :EndTrap
 :EndIf
⍝Done
