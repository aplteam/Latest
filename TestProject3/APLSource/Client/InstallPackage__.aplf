 (success tempDir cacheFlag)←InstallPackage__(packageID url);zipFilename;isHTTP;path;msg;rc
⍝ Fetches a package and unzips it into a temp folder.
⍝ When caching is on, the temp folder is created within the top-level of the cache folder.
⍝ Otherwise a folder is created inside the temp directory of the given OS.
⍝ `success` is 0 in case the server does not exist or does not respond etc but otherwise 1.
 success←1
 :If isHTTP←Reg.IsHTTP url
     PrintToSession'  Fetching from ',url,'...'
     :Trap 998
         zipFilename←GetPackageViaHTTP url,packageID
     :Else
         PrintToSession url,' does not host package ',packageID
         tempDir←''
         cacheFlag←success←0
         :Return
     :EndTrap
 :Else
     :If '.zip'≡¯4↑url
         zipFilename←RemoveFileProtocol url
     :Else
         zipFilename←RemoveFileProtocol url,'/',packageID,'.zip'
     :EndIf
     ('File <',zipFilename,'> does not exist')Assert F.IsFile zipFilename
 :EndIf
 zipFilename←F.EnforceSlash zipFilename
 :If MyUserSettings.caching                                                              ⍝ If caching is generally active...
 :AndIf IsHTTP url                                                                       ⍝ ... and the package was originally from the web ...
 :AndIf 0=GetNoCachingFlag url                                                           ⍝ ... and is not switched off for this particular registry...
 :AndIf 'Any'≢GetDeletePolicy url                                                        ⍝ ... and the registry does not operate an "All" delete policy ...
 :AndIf ~Reg.IsBeta packageID                                                            ⍝ ... and the package is not a beta version...
     cacheFlag←1
     PrintToSession'  Save package in cache...'
     tempDir←GetPathToPackageCache,'/temp/',packageID,'_',(GetMD5 zipFilename),'_',⎕AN   ⍝ ... then and only then do we write to the cache folder.
 :Else
     tempDir←Reg.GetTempDir,'/',packageID,'_',(GetMD5 zipFilename),'_',⎕AN               ⍝ Otherwise to the temp folder of the OS
     cacheFlag←0
 :EndIf
 :If 0=F.IsDir tempDir
     F.MkDir tempDir
     ⎕DL 0.2
 :EndIf
 PrintToSession'  Unzipping ',zipFilename,'...'
 zipFilename ZipArchive.UnzipTo tempDir
 :If CheckDeprecatedFlag tempDir
     (rc msg)←tempDir Add2Config'uri'(RemoveFileProtocol url)
 :AndIf 0=rc
     :If isHTTP
         :If cacheFlag
             tempDir←MovePackageToCache tempDir url packageID
         :EndIf
         F.DeleteFile zipFilename
     :EndIf
 :Else
     F.RmDir tempDir
     F.DeleteFile isHTTP/zipFilename
     msg ⎕SIGNAL 998
 :EndIf
⍝Done
