 r←Test_Server_502(stopFlag batchFlag);⎕TRAP;dir;src;zip;serverPath;body;cfg;reg;packageID;zipFilename;rc;msg;oldCredentials
⍝ Publish a package and then attempt to delete it with invalid API key
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX TC.GetTatinRootSpace'#'
 dir←∆GetTempDir ⍬
 (src zip)←(⊂dir,'/'),¨'src' 'zip'
 F.MkDir src zip
 serverPath←∆GetServerPath

 body←':Namespace Test' 'foo←{' '⍵' '}' ':EndNamespace'
 (⊂body)F.NPUT src,'/Test.apln'
 cfg←TC.InitPackageConfig ⍬
 cfg.group←'test'
 cfg.name←'Package_A'
 cfg.version←'0.1.0'
 cfg.source←'Test.apln'
 cfg.os_win←1
 cfg.license←'MIT'
 TC.WritePackageConfigFile src cfg
 packageID←'test-Package_A-0.1.0'
 (rc msg zipFilename)←TC.PublishPackage src(TC.ReplaceRegistryAlias'[localhost]')
 Assert 200=rc

 reg←TC.MyUserSettings.GetRegistry(TC.ReplaceRegistryAlias'[localhost]')
 oldCredentials←reg.api_key     ⍝ We need to reset this later
 reg.api_key←'Invalid'
 TC.MyUserSettings.ReplaceRegistry ⎕NEW TC.DefineRegistry(,⊂reg)

 (rc msg)←TC.DeletePackage(TC.ReplaceRegistryAlias'[localhost]'),packageID
 →T.GoToTidyUp rc≠401
 →T.GoToTidyUp msg≢'Server: Unauthorized request'

 r←T._OK

∆TidyUp:
 Assert 0=⊃F.RmDir dir
 Assert 0=⊃F.RmDir serverPath,'/',packageID
 F.DeleteFile(739⌶0),'/',packageID,'.zip'
 reg.api_key←oldCredentials
 TC.MyUserSettings.ReplaceRegistry ⎕NEW TC.DefineRegistry(,⊂reg)
 ∆RecompileIndexOnServer
⍝Done
